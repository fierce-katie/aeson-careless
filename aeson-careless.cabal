cabal-version:       2.4
name:                aeson-careless
version:             0.0.0.0
synopsis:            Parse JSON with less failing
description:         A library to parse JSON with Aeson, but collecting error
                     messages instead of failing
license:             WTFPL
license-file:        LICENSE
author:              Catherine Galkina
maintainer:          Catherine Galkina <catherine.galkina@gmail.com>
copyright:           2024 Catherine Galkina
category:            Web, JSON
build-type:          Simple
extra-doc-files:     README.md

common common-options
  build-depends:       aeson >= 2.2.2.0
                     , base >= 4.13.0.0
                     , dlist
                     , lens
                     , mtl
                     , tagged
                     , text
                     , vector

  ghc-options:       -Wall -Werror
                     -Wno-ambiguous-fields
                     -funbox-strict-fields
                     -Wunused-packages

  default-language:    Haskell2010
  default-extensions:  DataKinds
                       DeriveFunctor
                       DerivingStrategies
                       FlexibleContexts
                       FlexibleInstances
                       FunctionalDependencies
                       GeneralizedNewtypeDeriving
                       ImportQualifiedPost
                       LambdaCase
                       OverloadedRecordDot
                       OverloadedStrings
                       RecordWildCards
                       ScopedTypeVariables
                       TupleSections
                       TypeApplications
                       TypeFamilies
                       TypeOperators
                       UndecidableInstances
                       ViewPatterns

library
  import:              common-options
  hs-source-dirs:      src
  exposed-modules:     Data.Aeson.Careless
                     , Data.Aeson.Careless.FromJSON
                     , Data.Aeson.Careless.Types
                     , Data.Aeson.Types.FromJSON
                     , Data.Aeson.Types.Generic
